
reiwa:     ファイル形式 elf32-i386


セクション .init の逆アセンブル:

08048378 <_init>:
 8048378:	53                   	push   %ebx
 8048379:	83 ec 08             	sub    $0x8,%esp
 804837c:	e8 cf 00 00 00       	call   8048450 <__x86.get_pc_thunk.bx>
 8048381:	81 c3 7f 1c 00 00    	add    $0x1c7f,%ebx
 8048387:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 804838d:	85 c0                	test   %eax,%eax
 804838f:	74 05                	je     8048396 <_init+0x1e>
 8048391:	e8 4a 00 00 00       	call   80483e0 <__gmon_start__@plt>
 8048396:	83 c4 08             	add    $0x8,%esp
 8048399:	5b                   	pop    %ebx
 804839a:	c3                   	ret    

セクション .plt の逆アセンブル:

080483a0 <.plt>:
 80483a0:	ff 35 04 a0 04 08    	pushl  0x804a004
 80483a6:	ff 25 08 a0 04 08    	jmp    *0x804a008
 80483ac:	00 00                	add    %al,(%eax)
	...

080483b0 <printf@plt>:
 80483b0:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 80483b6:	68 00 00 00 00       	push   $0x0
 80483bb:	e9 e0 ff ff ff       	jmp    80483a0 <.plt>

080483c0 <__stack_chk_fail@plt>:
 80483c0:	ff 25 10 a0 04 08    	jmp    *0x804a010
 80483c6:	68 08 00 00 00       	push   $0x8
 80483cb:	e9 d0 ff ff ff       	jmp    80483a0 <.plt>

080483d0 <puts@plt>:
 80483d0:	ff 25 14 a0 04 08    	jmp    *0x804a014
 80483d6:	68 10 00 00 00       	push   $0x10
 80483db:	e9 c0 ff ff ff       	jmp    80483a0 <.plt>

080483e0 <__gmon_start__@plt>:
 80483e0:	ff 25 18 a0 04 08    	jmp    *0x804a018
 80483e6:	68 18 00 00 00       	push   $0x18
 80483eb:	e9 b0 ff ff ff       	jmp    80483a0 <.plt>

080483f0 <exit@plt>:
 80483f0:	ff 25 1c a0 04 08    	jmp    *0x804a01c
 80483f6:	68 20 00 00 00       	push   $0x20
 80483fb:	e9 a0 ff ff ff       	jmp    80483a0 <.plt>

08048400 <__libc_start_main@plt>:
 8048400:	ff 25 20 a0 04 08    	jmp    *0x804a020
 8048406:	68 28 00 00 00       	push   $0x28
 804840b:	e9 90 ff ff ff       	jmp    80483a0 <.plt>

08048410 <__isoc99_scanf@plt>:
 8048410:	ff 25 24 a0 04 08    	jmp    *0x804a024
 8048416:	68 30 00 00 00       	push   $0x30
 804841b:	e9 80 ff ff ff       	jmp    80483a0 <.plt>

セクション .text の逆アセンブル:

08048420 <_start>:
 8048420:	31 ed                	xor    %ebp,%ebp
 8048422:	5e                   	pop    %esi
 8048423:	89 e1                	mov    %esp,%ecx
 8048425:	83 e4 f0             	and    $0xfffffff0,%esp
 8048428:	50                   	push   %eax
 8048429:	54                   	push   %esp
 804842a:	52                   	push   %edx
 804842b:	68 f0 89 04 08       	push   $0x80489f0
 8048430:	68 80 89 04 08       	push   $0x8048980
 8048435:	51                   	push   %ecx
 8048436:	56                   	push   %esi
 8048437:	68 1d 85 04 08       	push   $0x804851d
 804843c:	e8 bf ff ff ff       	call   8048400 <__libc_start_main@plt>
 8048441:	f4                   	hlt    
 8048442:	66 90                	xchg   %ax,%ax
 8048444:	66 90                	xchg   %ax,%ax
 8048446:	66 90                	xchg   %ax,%ax
 8048448:	66 90                	xchg   %ax,%ax
 804844a:	66 90                	xchg   %ax,%ax
 804844c:	66 90                	xchg   %ax,%ax
 804844e:	66 90                	xchg   %ax,%ax

08048450 <__x86.get_pc_thunk.bx>:
 8048450:	8b 1c 24             	mov    (%esp),%ebx
 8048453:	c3                   	ret    
 8048454:	66 90                	xchg   %ax,%ax
 8048456:	66 90                	xchg   %ax,%ax
 8048458:	66 90                	xchg   %ax,%ax
 804845a:	66 90                	xchg   %ax,%ax
 804845c:	66 90                	xchg   %ax,%ax
 804845e:	66 90                	xchg   %ax,%ax

08048460 <deregister_tm_clones>:
 8048460:	b8 33 a0 04 08       	mov    $0x804a033,%eax
 8048465:	2d 30 a0 04 08       	sub    $0x804a030,%eax
 804846a:	83 f8 06             	cmp    $0x6,%eax
 804846d:	77 01                	ja     8048470 <deregister_tm_clones+0x10>
 804846f:	c3                   	ret    
 8048470:	b8 00 00 00 00       	mov    $0x0,%eax
 8048475:	85 c0                	test   %eax,%eax
 8048477:	74 f6                	je     804846f <deregister_tm_clones+0xf>
 8048479:	55                   	push   %ebp
 804847a:	89 e5                	mov    %esp,%ebp
 804847c:	83 ec 18             	sub    $0x18,%esp
 804847f:	c7 04 24 30 a0 04 08 	movl   $0x804a030,(%esp)
 8048486:	ff d0                	call   *%eax
 8048488:	c9                   	leave  
 8048489:	c3                   	ret    
 804848a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

08048490 <register_tm_clones>:
 8048490:	b8 30 a0 04 08       	mov    $0x804a030,%eax
 8048495:	2d 30 a0 04 08       	sub    $0x804a030,%eax
 804849a:	c1 f8 02             	sar    $0x2,%eax
 804849d:	89 c2                	mov    %eax,%edx
 804849f:	c1 ea 1f             	shr    $0x1f,%edx
 80484a2:	01 d0                	add    %edx,%eax
 80484a4:	d1 f8                	sar    %eax
 80484a6:	75 01                	jne    80484a9 <register_tm_clones+0x19>
 80484a8:	c3                   	ret    
 80484a9:	ba 00 00 00 00       	mov    $0x0,%edx
 80484ae:	85 d2                	test   %edx,%edx
 80484b0:	74 f6                	je     80484a8 <register_tm_clones+0x18>
 80484b2:	55                   	push   %ebp
 80484b3:	89 e5                	mov    %esp,%ebp
 80484b5:	83 ec 18             	sub    $0x18,%esp
 80484b8:	89 44 24 04          	mov    %eax,0x4(%esp)
 80484bc:	c7 04 24 30 a0 04 08 	movl   $0x804a030,(%esp)
 80484c3:	ff d2                	call   *%edx
 80484c5:	c9                   	leave  
 80484c6:	c3                   	ret    
 80484c7:	89 f6                	mov    %esi,%esi
 80484c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

080484d0 <__do_global_dtors_aux>:
 80484d0:	80 3d 30 a0 04 08 00 	cmpb   $0x0,0x804a030
 80484d7:	75 13                	jne    80484ec <__do_global_dtors_aux+0x1c>
 80484d9:	55                   	push   %ebp
 80484da:	89 e5                	mov    %esp,%ebp
 80484dc:	83 ec 08             	sub    $0x8,%esp
 80484df:	e8 7c ff ff ff       	call   8048460 <deregister_tm_clones>
 80484e4:	c6 05 30 a0 04 08 01 	movb   $0x1,0x804a030
 80484eb:	c9                   	leave  
 80484ec:	f3 c3                	repz ret 
 80484ee:	66 90                	xchg   %ax,%ax

080484f0 <frame_dummy>:
 80484f0:	a1 10 9f 04 08       	mov    0x8049f10,%eax
 80484f5:	85 c0                	test   %eax,%eax
 80484f7:	74 1f                	je     8048518 <frame_dummy+0x28>
 80484f9:	b8 00 00 00 00       	mov    $0x0,%eax
 80484fe:	85 c0                	test   %eax,%eax
 8048500:	74 16                	je     8048518 <frame_dummy+0x28>
 8048502:	55                   	push   %ebp
 8048503:	89 e5                	mov    %esp,%ebp
 8048505:	83 ec 18             	sub    $0x18,%esp
 8048508:	c7 04 24 10 9f 04 08 	movl   $0x8049f10,(%esp)
 804850f:	ff d0                	call   *%eax
 8048511:	c9                   	leave  
 8048512:	e9 79 ff ff ff       	jmp    8048490 <register_tm_clones>
 8048517:	90                   	nop
 8048518:	e9 73 ff ff ff       	jmp    8048490 <register_tm_clones>

0804851d <main>:
 804851d:	55                   	push   %ebp
 804851e:	89 e5                	mov    %esp,%ebp
 8048520:	53                   	push   %ebx
 8048521:	83 e4 f0             	and    $0xfffffff0,%esp
 8048524:	81 ec f0 00 00 00    	sub    $0xf0,%esp
 804852a:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048530:	89 84 24 ec 00 00 00 	mov    %eax,0xec(%esp)
 8048537:	31 c0                	xor    %eax,%eax
 8048539:	c7 44 24 7e 57 65 6c 	movl   $0x636c6557,0x7e(%esp)
 8048540:	63 
 8048541:	c7 84 24 82 00 00 00 	movl   $0x20656d6f,0x82(%esp)
 8048548:	6f 6d 65 20 
 804854c:	c7 84 24 86 00 00 00 	movl   $0x4e206f74,0x86(%esp)
 8048553:	74 6f 20 4e 
 8048557:	c7 84 24 8a 00 00 00 	movl   $0x45207765,0x8a(%esp)
 804855e:	65 77 20 45 
 8048562:	c7 84 24 8e 00 00 00 	movl   $0x20216172,0x8e(%esp)
 8048569:	72 61 21 20 
 804856d:	c7 84 24 92 00 00 00 	movl   $0x61656c50,0x92(%esp)
 8048574:	50 6c 65 61 
 8048578:	c7 84 24 96 00 00 00 	movl   $0x61206573,0x96(%esp)
 804857f:	73 65 20 61 
 8048583:	c7 84 24 9a 00 00 00 	movl   $0x6577736e,0x9a(%esp)
 804858a:	6e 73 77 65 
 804858e:	c7 84 24 9e 00 00 00 	movl   $0x68742072,0x9e(%esp)
 8048595:	72 20 74 68 
 8048599:	c7 84 24 a2 00 00 00 	movl   $0x616e2065,0xa2(%esp)
 80485a0:	65 20 6e 61 
 80485a4:	c7 84 24 a6 00 00 00 	movl   $0x6f20656d,0xa6(%esp)
 80485ab:	6d 65 20 6f 
 80485af:	c7 84 24 aa 00 00 00 	movl   $0x654e2066,0xaa(%esp)
 80485b6:	66 20 4e 65 
 80485ba:	c7 84 24 ae 00 00 00 	movl   $0x72452077,0xae(%esp)
 80485c1:	77 20 45 72 
 80485c5:	66 c7 84 24 b2 00 00 	movw   $0x2161,0xb2(%esp)
 80485cc:	00 61 21 
 80485cf:	c6 84 24 b4 00 00 00 	movb   $0x0,0xb4(%esp)
 80485d6:	00 
 80485d7:	c7 84 24 b5 00 00 00 	movl   $0x636c6557,0xb5(%esp)
 80485de:	57 65 6c 63 
 80485e2:	c7 84 24 b9 00 00 00 	movl   $0x20656d6f,0xb9(%esp)
 80485e9:	6f 6d 65 20 
 80485ed:	c7 84 24 bd 00 00 00 	movl   $0x4e206f74,0xbd(%esp)
 80485f4:	74 6f 20 4e 
 80485f8:	c7 84 24 c1 00 00 00 	movl   $0x45207765,0xc1(%esp)
 80485ff:	65 77 20 45 
 8048603:	c7 84 24 c5 00 00 00 	movl   $0x20216172,0xc5(%esp)
 804860a:	72 61 21 20 
 804860e:	c7 84 24 c9 00 00 00 	movl   $0x61656c50,0xc9(%esp)
 8048615:	50 6c 65 61 
 8048619:	c7 84 24 cd 00 00 00 	movl   $0x61206573,0xcd(%esp)
 8048620:	73 65 20 61 
 8048624:	c7 84 24 d1 00 00 00 	movl   $0x6577736e,0xd1(%esp)
 804862b:	6e 73 77 65 
 804862f:	c7 84 24 d5 00 00 00 	movl   $0x68742072,0xd5(%esp)
 8048636:	72 20 74 68 
 804863a:	c7 84 24 d9 00 00 00 	movl   $0x616e2065,0xd9(%esp)
 8048641:	65 20 6e 61 
 8048645:	c7 84 24 dd 00 00 00 	movl   $0x6f20656d,0xdd(%esp)
 804864c:	6d 65 20 6f 
 8048650:	c7 84 24 e1 00 00 00 	movl   $0x6c4f2066,0xe1(%esp)
 8048657:	66 20 4f 6c 
 804865b:	c7 84 24 e5 00 00 00 	movl   $0x72452064,0xe5(%esp)
 8048662:	64 20 45 72 
 8048666:	66 c7 84 24 e9 00 00 	movw   $0x2161,0xe9(%esp)
 804866d:	00 61 21 
 8048670:	c6 84 24 eb 00 00 00 	movb   $0x0,0xeb(%esp)
 8048677:	00 
 8048678:	c7 44 24 22 53 48 4f 	movl   $0x574f4853,0x22(%esp)
 804867f:	57 
 8048680:	66 c7 44 24 26 41 00 	movw   $0x41,0x26(%esp)
 8048687:	c7 44 24 2f 48 45 49 	movl   $0x53494548,0x2f(%esp)
 804868e:	53 
 804868f:	66 c7 44 24 33 45 49 	movw   $0x4945,0x33(%esp)
 8048696:	c6 44 24 35 00       	movb   $0x0,0x35(%esp)
 804869b:	c6 44 24 1c 01       	movb   $0x1,0x1c(%esp)
 80486a0:	c6 44 24 1d 09       	movb   $0x9,0x1d(%esp)
 80486a5:	c6 44 24 1e 16       	movb   $0x16,0x1e(%esp)
 80486aa:	c6 44 24 1f 00       	movb   $0x0,0x1f(%esp)
 80486af:	c6 44 24 20 00       	movb   $0x0,0x20(%esp)
 80486b4:	c6 44 24 21 00       	movb   $0x0,0x21(%esp)
 80486b9:	c6 44 24 28 00       	movb   $0x0,0x28(%esp)
 80486be:	c6 44 24 29 00       	movb   $0x0,0x29(%esp)
 80486c3:	c6 44 24 2a 10       	movb   $0x10,0x2a(%esp)
 80486c8:	c6 44 24 2b 00       	movb   $0x0,0x2b(%esp)
 80486cd:	c6 44 24 2c 04       	movb   $0x4,0x2c(%esp)
 80486d2:	c6 44 24 2d 10       	movb   $0x10,0x2d(%esp)
 80486d7:	c6 44 24 2e 00       	movb   $0x0,0x2e(%esp)
 80486dc:	c6 44 24 66 29       	movb   $0x29,0x66(%esp)
 80486e1:	c6 44 24 67 0c       	movb   $0xc,0x67(%esp)
 80486e6:	c6 44 24 68 74       	movb   $0x74,0x68(%esp)
 80486eb:	c6 44 24 69 03       	movb   $0x3,0x69(%esp)
 80486f0:	c6 44 24 6a 6c       	movb   $0x6c,0x6a(%esp)
 80486f5:	c6 44 24 6b 1b       	movb   $0x1b,0x6b(%esp)
 80486fa:	c6 44 24 6c 68       	movb   $0x68,0x6c(%esp)
 80486ff:	c6 44 24 6d 11       	movb   $0x11,0x6d(%esp)
 8048704:	c6 44 24 6e 7e       	movb   $0x7e,0x6e(%esp)
 8048709:	c6 44 24 6f 13       	movb   $0x13,0x6f(%esp)
 804870e:	c6 44 24 70 24       	movb   $0x24,0x70(%esp)
 8048713:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804871a:	00 
 804871b:	eb 39                	jmp    8048756 <main+0x239>
 804871d:	8d 54 24 36          	lea    0x36(%esp),%edx
 8048721:	8b 44 24 18          	mov    0x18(%esp),%eax
 8048725:	01 d0                	add    %edx,%eax
 8048727:	c6 00 00             	movb   $0x0,(%eax)
 804872a:	8d 54 24 42          	lea    0x42(%esp),%edx
 804872e:	8b 44 24 18          	mov    0x18(%esp),%eax
 8048732:	01 d0                	add    %edx,%eax
 8048734:	c6 00 00             	movb   $0x0,(%eax)
 8048737:	8d 54 24 4e          	lea    0x4e(%esp),%edx
 804873b:	8b 44 24 18          	mov    0x18(%esp),%eax
 804873f:	01 d0                	add    %edx,%eax
 8048741:	c6 00 00             	movb   $0x0,(%eax)
 8048744:	8d 54 24 5a          	lea    0x5a(%esp),%edx
 8048748:	8b 44 24 18          	mov    0x18(%esp),%eax
 804874c:	01 d0                	add    %edx,%eax
 804874e:	c6 00 00             	movb   $0x0,(%eax)
 8048751:	83 44 24 18 01       	addl   $0x1,0x18(%esp)
 8048756:	83 7c 24 18 0b       	cmpl   $0xb,0x18(%esp)
 804875b:	7e c0                	jle    804871d <main+0x200>
 804875d:	8d 44 24 7e          	lea    0x7e(%esp),%eax
 8048761:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048765:	c7 04 24 10 8a 04 08 	movl   $0x8048a10,(%esp)
 804876c:	e8 3f fc ff ff       	call   80483b0 <printf@plt>
 8048771:	8d 44 24 36          	lea    0x36(%esp),%eax
 8048775:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048779:	c7 04 24 14 8a 04 08 	movl   $0x8048a14,(%esp)
 8048780:	e8 8b fc ff ff       	call   8048410 <__isoc99_scanf@plt>
 8048785:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804878c:	00 
 804878d:	eb 50                	jmp    80487df <main+0x2c2>
 804878f:	8d 54 24 36          	lea    0x36(%esp),%edx
 8048793:	8b 44 24 18          	mov    0x18(%esp),%eax
 8048797:	01 d0                	add    %edx,%eax
 8048799:	0f b6 10             	movzbl (%eax),%edx
 804879c:	8d 4c 24 22          	lea    0x22(%esp),%ecx
 80487a0:	8b 44 24 18          	mov    0x18(%esp),%eax
 80487a4:	01 c8                	add    %ecx,%eax
 80487a6:	0f b6 00             	movzbl (%eax),%eax
 80487a9:	31 d0                	xor    %edx,%eax
 80487ab:	8d 4c 24 42          	lea    0x42(%esp),%ecx
 80487af:	8b 54 24 18          	mov    0x18(%esp),%edx
 80487b3:	01 ca                	add    %ecx,%edx
 80487b5:	88 02                	mov    %al,(%edx)
 80487b7:	8d 54 24 1c          	lea    0x1c(%esp),%edx
 80487bb:	8b 44 24 18          	mov    0x18(%esp),%eax
 80487bf:	01 d0                	add    %edx,%eax
 80487c1:	0f b6 10             	movzbl (%eax),%edx
 80487c4:	8d 4c 24 42          	lea    0x42(%esp),%ecx
 80487c8:	8b 44 24 18          	mov    0x18(%esp),%eax
 80487cc:	01 c8                	add    %ecx,%eax
 80487ce:	0f b6 00             	movzbl (%eax),%eax
 80487d1:	38 c2                	cmp    %al,%dl
 80487d3:	74 05                	je     80487da <main+0x2bd>
 80487d5:	e8 7b 01 00 00       	call   8048955 <something_is_wrong>
 80487da:	83 44 24 18 01       	addl   $0x1,0x18(%esp)
 80487df:	83 7c 24 18 04       	cmpl   $0x4,0x18(%esp)
 80487e4:	7e a9                	jle    804878f <main+0x272>
 80487e6:	8d 84 24 b5 00 00 00 	lea    0xb5(%esp),%eax
 80487ed:	89 44 24 04          	mov    %eax,0x4(%esp)
 80487f1:	c7 04 24 10 8a 04 08 	movl   $0x8048a10,(%esp)
 80487f8:	e8 b3 fb ff ff       	call   80483b0 <printf@plt>
 80487fd:	8d 44 24 4e          	lea    0x4e(%esp),%eax
 8048801:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048805:	c7 04 24 14 8a 04 08 	movl   $0x8048a14,(%esp)
 804880c:	e8 ff fb ff ff       	call   8048410 <__isoc99_scanf@plt>
 8048811:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8048818:	00 
 8048819:	eb 50                	jmp    804886b <main+0x34e>
 804881b:	8d 54 24 4e          	lea    0x4e(%esp),%edx
 804881f:	8b 44 24 18          	mov    0x18(%esp),%eax
 8048823:	01 d0                	add    %edx,%eax
 8048825:	0f b6 10             	movzbl (%eax),%edx
 8048828:	8d 4c 24 2f          	lea    0x2f(%esp),%ecx
 804882c:	8b 44 24 18          	mov    0x18(%esp),%eax
 8048830:	01 c8                	add    %ecx,%eax
 8048832:	0f b6 00             	movzbl (%eax),%eax
 8048835:	31 d0                	xor    %edx,%eax
 8048837:	8d 4c 24 5a          	lea    0x5a(%esp),%ecx
 804883b:	8b 54 24 18          	mov    0x18(%esp),%edx
 804883f:	01 ca                	add    %ecx,%edx
 8048841:	88 02                	mov    %al,(%edx)
 8048843:	8d 54 24 28          	lea    0x28(%esp),%edx
 8048847:	8b 44 24 18          	mov    0x18(%esp),%eax
 804884b:	01 d0                	add    %edx,%eax
 804884d:	0f b6 10             	movzbl (%eax),%edx
 8048850:	8d 4c 24 5a          	lea    0x5a(%esp),%ecx
 8048854:	8b 44 24 18          	mov    0x18(%esp),%eax
 8048858:	01 c8                	add    %ecx,%eax
 804885a:	0f b6 00             	movzbl (%eax),%eax
 804885d:	38 c2                	cmp    %al,%dl
 804885f:	74 05                	je     8048866 <main+0x349>
 8048861:	e8 ef 00 00 00       	call   8048955 <something_is_wrong>
 8048866:	83 44 24 18 01       	addl   $0x1,0x18(%esp)
 804886b:	83 7c 24 18 05       	cmpl   $0x5,0x18(%esp)
 8048870:	7e a9                	jle    804881b <main+0x2fe>
 8048872:	0f b6 54 24 66       	movzbl 0x66(%esp),%edx
 8048877:	0f b6 44 24 36       	movzbl 0x36(%esp),%eax
 804887c:	31 d0                	xor    %edx,%eax
 804887e:	88 44 24 72          	mov    %al,0x72(%esp)
 8048882:	0f b6 54 24 67       	movzbl 0x67(%esp),%edx
 8048887:	0f b6 44 24 37       	movzbl 0x37(%esp),%eax
 804888c:	31 d0                	xor    %edx,%eax
 804888e:	88 44 24 73          	mov    %al,0x73(%esp)
 8048892:	0f b6 54 24 68       	movzbl 0x68(%esp),%edx
 8048897:	0f b6 44 24 38       	movzbl 0x38(%esp),%eax
 804889c:	31 d0                	xor    %edx,%eax
 804889e:	88 44 24 74          	mov    %al,0x74(%esp)
 80488a2:	0f b6 54 24 69       	movzbl 0x69(%esp),%edx
 80488a7:	0f b6 44 24 39       	movzbl 0x39(%esp),%eax
 80488ac:	31 d0                	xor    %edx,%eax
 80488ae:	88 44 24 75          	mov    %al,0x75(%esp)
 80488b2:	0f b6 54 24 6a       	movzbl 0x6a(%esp),%edx
 80488b7:	0f b6 44 24 3a       	movzbl 0x3a(%esp),%eax
 80488bc:	31 d0                	xor    %edx,%eax
 80488be:	88 44 24 76          	mov    %al,0x76(%esp)
 80488c2:	0f b6 54 24 6b       	movzbl 0x6b(%esp),%edx
 80488c7:	0f b6 44 24 4e       	movzbl 0x4e(%esp),%eax
 80488cc:	31 d0                	xor    %edx,%eax
 80488ce:	88 44 24 77          	mov    %al,0x77(%esp)
 80488d2:	0f b6 54 24 6c       	movzbl 0x6c(%esp),%edx
 80488d7:	0f b6 44 24 4f       	movzbl 0x4f(%esp),%eax
 80488dc:	31 d0                	xor    %edx,%eax
 80488de:	88 44 24 78          	mov    %al,0x78(%esp)
 80488e2:	0f b6 54 24 6d       	movzbl 0x6d(%esp),%edx
 80488e7:	0f b6 44 24 50       	movzbl 0x50(%esp),%eax
 80488ec:	31 d0                	xor    %edx,%eax
 80488ee:	88 44 24 79          	mov    %al,0x79(%esp)
 80488f2:	0f b6 54 24 6e       	movzbl 0x6e(%esp),%edx
 80488f7:	0f b6 44 24 51       	movzbl 0x51(%esp),%eax
 80488fc:	31 d0                	xor    %edx,%eax
 80488fe:	88 44 24 7a          	mov    %al,0x7a(%esp)
 8048902:	0f b6 54 24 6f       	movzbl 0x6f(%esp),%edx
 8048907:	0f b6 44 24 52       	movzbl 0x52(%esp),%eax
 804890c:	31 d0                	xor    %edx,%eax
 804890e:	88 44 24 7b          	mov    %al,0x7b(%esp)
 8048912:	0f b6 54 24 70       	movzbl 0x70(%esp),%edx
 8048917:	0f b6 44 24 53       	movzbl 0x53(%esp),%eax
 804891c:	31 d0                	xor    %edx,%eax
 804891e:	88 44 24 7c          	mov    %al,0x7c(%esp)
 8048922:	c6 44 24 7d 00       	movb   $0x0,0x7d(%esp)
 8048927:	8d 44 24 72          	lea    0x72(%esp),%eax
 804892b:	89 44 24 04          	mov    %eax,0x4(%esp)
 804892f:	c7 04 24 17 8a 04 08 	movl   $0x8048a17,(%esp)
 8048936:	e8 75 fa ff ff       	call   80483b0 <printf@plt>
 804893b:	8b 9c 24 ec 00 00 00 	mov    0xec(%esp),%ebx
 8048942:	65 33 1d 14 00 00 00 	xor    %gs:0x14,%ebx
 8048949:	74 05                	je     8048950 <main+0x433>
 804894b:	e8 70 fa ff ff       	call   80483c0 <__stack_chk_fail@plt>
 8048950:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 8048953:	c9                   	leave  
 8048954:	c3                   	ret    

08048955 <something_is_wrong>:
 8048955:	55                   	push   %ebp
 8048956:	89 e5                	mov    %esp,%ebp
 8048958:	83 ec 18             	sub    $0x18,%esp
 804895b:	c7 04 24 21 8a 04 08 	movl   $0x8048a21,(%esp)
 8048962:	e8 69 fa ff ff       	call   80483d0 <puts@plt>
 8048967:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 804896e:	e8 7d fa ff ff       	call   80483f0 <exit@plt>
 8048973:	66 90                	xchg   %ax,%ax
 8048975:	66 90                	xchg   %ax,%ax
 8048977:	66 90                	xchg   %ax,%ax
 8048979:	66 90                	xchg   %ax,%ax
 804897b:	66 90                	xchg   %ax,%ax
 804897d:	66 90                	xchg   %ax,%ax
 804897f:	90                   	nop

08048980 <__libc_csu_init>:
 8048980:	55                   	push   %ebp
 8048981:	57                   	push   %edi
 8048982:	31 ff                	xor    %edi,%edi
 8048984:	56                   	push   %esi
 8048985:	53                   	push   %ebx
 8048986:	e8 c5 fa ff ff       	call   8048450 <__x86.get_pc_thunk.bx>
 804898b:	81 c3 75 16 00 00    	add    $0x1675,%ebx
 8048991:	83 ec 1c             	sub    $0x1c,%esp
 8048994:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 8048998:	8d b3 0c ff ff ff    	lea    -0xf4(%ebx),%esi
 804899e:	e8 d5 f9 ff ff       	call   8048378 <_init>
 80489a3:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 80489a9:	29 c6                	sub    %eax,%esi
 80489ab:	c1 fe 02             	sar    $0x2,%esi
 80489ae:	85 f6                	test   %esi,%esi
 80489b0:	74 27                	je     80489d9 <__libc_csu_init+0x59>
 80489b2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80489b8:	8b 44 24 38          	mov    0x38(%esp),%eax
 80489bc:	89 2c 24             	mov    %ebp,(%esp)
 80489bf:	89 44 24 08          	mov    %eax,0x8(%esp)
 80489c3:	8b 44 24 34          	mov    0x34(%esp),%eax
 80489c7:	89 44 24 04          	mov    %eax,0x4(%esp)
 80489cb:	ff 94 bb 08 ff ff ff 	call   *-0xf8(%ebx,%edi,4)
 80489d2:	83 c7 01             	add    $0x1,%edi
 80489d5:	39 f7                	cmp    %esi,%edi
 80489d7:	75 df                	jne    80489b8 <__libc_csu_init+0x38>
 80489d9:	83 c4 1c             	add    $0x1c,%esp
 80489dc:	5b                   	pop    %ebx
 80489dd:	5e                   	pop    %esi
 80489de:	5f                   	pop    %edi
 80489df:	5d                   	pop    %ebp
 80489e0:	c3                   	ret    
 80489e1:	eb 0d                	jmp    80489f0 <__libc_csu_fini>
 80489e3:	90                   	nop
 80489e4:	90                   	nop
 80489e5:	90                   	nop
 80489e6:	90                   	nop
 80489e7:	90                   	nop
 80489e8:	90                   	nop
 80489e9:	90                   	nop
 80489ea:	90                   	nop
 80489eb:	90                   	nop
 80489ec:	90                   	nop
 80489ed:	90                   	nop
 80489ee:	90                   	nop
 80489ef:	90                   	nop

080489f0 <__libc_csu_fini>:
 80489f0:	f3 c3                	repz ret 

セクション .fini の逆アセンブル:

080489f4 <_fini>:
 80489f4:	53                   	push   %ebx
 80489f5:	83 ec 08             	sub    $0x8,%esp
 80489f8:	e8 53 fa ff ff       	call   8048450 <__x86.get_pc_thunk.bx>
 80489fd:	81 c3 03 16 00 00    	add    $0x1603,%ebx
 8048a03:	83 c4 08             	add    $0x8,%esp
 8048a06:	5b                   	pop    %ebx
 8048a07:	c3                   	ret    
